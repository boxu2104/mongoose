int roll() {
  return ( 1:1 | 1:2 | 1:3 | 1:4 | 1:5 | 1:6 )
}

agent PlayerOne {
      ~float score
      ~int rolls

      create() {
	  score = 0.0
      }

      #roll 3 times or until gets a 1
      action {
	  rolls = 0
	  ~int face = 0 

          while(face != 1 and rolls < 3) {
	    face = roll()	   
	    if(face == 1) {
              print("PIG! PlayerOne loses their points.")
              score = 0
            } else {
	      score = score + face
	    }
            rolls = rolls + 1
          }
      }

      destroy {

      }

      float average_points(){
      	  return score / (TICKCOUNT - 1.0)
      }
}

agent PlayerTwo {
      ~int score
      ~int turn_score

      create() {
	  score = 0
	  turn_score = 0
      }

      #rolls until gets 20 points or rolls a 1
      action {
	  turn_score = 0
          ~int face = roll()

          while(turn_score < 20) {
	      if(face == 1) {
                  print("PIG! PlayerTwo loses their points.")
                  score = 0
                  turn_score = 1000 #end turn 
	      } else {
                  turn_score = turn_score + face
                  score = score + face
	      }
          }
      }

      destroy {

      }
}

environment {
    ~int win = 100
    ~PlayerOne one
    ~PlayerTwo two

    populate {
        one = PlayerOne()
        two = PlayerTwo()
        print("Next Round:", TICKCOUNT)
    }

    action {
        print("Player one's score:", one.score)
        print("Player two's score:", two.score)
        print("Next Round:", TICKCOUNT+1)
    }
}

terminate {
    (one.score >= win) {
        print("Player one wins!")
    }
    (two.score >= win) {
        print("Player two wins!")
    }
}

analysis {
    print("Player one's final score:", one.score)
    print("Player two's final score:", two.score)
    print("Player one's average points per turn:", one.average_points())
}
